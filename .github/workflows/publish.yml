name: Publish

on:
  push:
    branches: [main]

env:
  CARGO_TERM_COLOR: always

jobs:
  build-test:
    name: Build and test (${{ matrix.os }})

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4
      - uses: swatinem/rust-cache@v2
      - name: Build
        run: cargo build --verbose

      - name: Run tests (without coverage)
        run: cargo t --features args --verbose

  release-please:
    name: Execute release chores

    permissions:
      contents: write
      pull-requests: write

    runs-on: ubuntu-latest
    needs: build-test

    outputs:
      created: ${{ steps.release.outputs.release_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}

    steps:
      - uses: google-github-actions/release-please-action@v3
        id: release
        with:
          release-type: rust

  publish:
    name: Publish to crates.io

    runs-on: ubuntu-latest
    needs: release-please
#    if: needs.release-please.outputs.created

    environment: crates.io

    steps:
      - uses: actions/checkout@v3
      - uses: swatinem/rust-cache@v2

      - name: Publish
      # https://doc.rust-lang.org/cargo/reference/config.html?highlight=CARGO_REGISTRY_TOKEN#credentials
        run: cargo publish --verbose --token ${{ secrets.CARGO_REGISTRY_TOKEN }}

#on:
#  push:
#    # Pattern matched against refs/tags
#    tags:        
#      - '*'           # Push events to every tag not containing /
#
#
#jobs:
#  publish:
#    name: Publish
#    # Specify OS
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout sources
#        uses: actions/checkout@v2
#
#      - name: Install stable toolchain
#        uses: actions-rs/toolchain@v1
#        with:
#          profile: minimal
#          toolchain: stable
#          override: true
#      - run: cargo publish --token ${CARGO_REGISTRY_TOKEN}
#        env:
#          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN}}
#
#
